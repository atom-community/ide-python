// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

const envPathVariable_1 = require("./checks/envPathVariable");

const invalidDebuggerType_1 = require("./checks/invalidDebuggerType");

const invalidPythonPathInDebugger_1 = require("./checks/invalidPythonPathInDebugger");

const powerShellActivation_1 = require("./checks/powerShellActivation");

const pythonInterpreter_1 = require("./checks/pythonInterpreter");

const factory_1 = require("./commands/factory");

const types_1 = require("./commands/types");

const filter_1 = require("./filter");

const promptHandler_1 = require("./promptHandler");

const types_2 = require("./types");

function registerTypes(serviceManager) {
  serviceManager.addSingleton(types_2.IDiagnosticFilterService, filter_1.DiagnosticFilterService);
  serviceManager.addSingleton(types_2.IDiagnosticHandlerService, promptHandler_1.DiagnosticCommandPromptHandlerService, promptHandler_1.DiagnosticCommandPromptHandlerServiceId);
  serviceManager.addSingleton(types_2.IDiagnosticsService, envPathVariable_1.EnvironmentPathVariableDiagnosticsService, envPathVariable_1.EnvironmentPathVariableDiagnosticsServiceId);
  serviceManager.addSingleton(types_2.IDiagnosticsService, invalidDebuggerType_1.InvalidDebuggerTypeDiagnosticsService, invalidDebuggerType_1.InvalidDebuggerTypeDiagnosticsServiceId);
  serviceManager.addSingleton(types_2.IDiagnosticsService, pythonInterpreter_1.InvalidPythonInterpreterService, pythonInterpreter_1.InvalidPythonInterpreterServiceId);
  serviceManager.addSingleton(types_2.IDiagnosticsService, invalidPythonPathInDebugger_1.InvalidPythonPathInDebuggerService, invalidPythonPathInDebugger_1.InvalidPythonPathInDebuggerServiceId);
  serviceManager.addSingleton(types_2.IDiagnosticsService, powerShellActivation_1.PowerShellActivationHackDiagnosticsService, powerShellActivation_1.PowerShellActivationHackDiagnosticsServiceId);
  serviceManager.addSingleton(types_1.IDiagnosticsCommandFactory, factory_1.DiagnosticsCommandFactory);
}

exports.registerTypes = registerTypes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2VSZWdpc3RyeS5qcyJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudlBhdGhWYXJpYWJsZV8xIiwicmVxdWlyZSIsImludmFsaWREZWJ1Z2dlclR5cGVfMSIsImludmFsaWRQeXRob25QYXRoSW5EZWJ1Z2dlcl8xIiwicG93ZXJTaGVsbEFjdGl2YXRpb25fMSIsInB5dGhvbkludGVycHJldGVyXzEiLCJmYWN0b3J5XzEiLCJ0eXBlc18xIiwiZmlsdGVyXzEiLCJwcm9tcHRIYW5kbGVyXzEiLCJ0eXBlc18yIiwicmVnaXN0ZXJUeXBlcyIsInNlcnZpY2VNYW5hZ2VyIiwiYWRkU2luZ2xldG9uIiwiSURpYWdub3N0aWNGaWx0ZXJTZXJ2aWNlIiwiRGlhZ25vc3RpY0ZpbHRlclNlcnZpY2UiLCJJRGlhZ25vc3RpY0hhbmRsZXJTZXJ2aWNlIiwiRGlhZ25vc3RpY0NvbW1hbmRQcm9tcHRIYW5kbGVyU2VydmljZSIsIkRpYWdub3N0aWNDb21tYW5kUHJvbXB0SGFuZGxlclNlcnZpY2VJZCIsIklEaWFnbm9zdGljc1NlcnZpY2UiLCJFbnZpcm9ubWVudFBhdGhWYXJpYWJsZURpYWdub3N0aWNzU2VydmljZSIsIkVudmlyb25tZW50UGF0aFZhcmlhYmxlRGlhZ25vc3RpY3NTZXJ2aWNlSWQiLCJJbnZhbGlkRGVidWdnZXJUeXBlRGlhZ25vc3RpY3NTZXJ2aWNlIiwiSW52YWxpZERlYnVnZ2VyVHlwZURpYWdub3N0aWNzU2VydmljZUlkIiwiSW52YWxpZFB5dGhvbkludGVycHJldGVyU2VydmljZSIsIkludmFsaWRQeXRob25JbnRlcnByZXRlclNlcnZpY2VJZCIsIkludmFsaWRQeXRob25QYXRoSW5EZWJ1Z2dlclNlcnZpY2UiLCJJbnZhbGlkUHl0aG9uUGF0aEluRGVidWdnZXJTZXJ2aWNlSWQiLCJQb3dlclNoZWxsQWN0aXZhdGlvbkhhY2tEaWFnbm9zdGljc1NlcnZpY2UiLCJQb3dlclNoZWxsQWN0aXZhdGlvbkhhY2tEaWFnbm9zdGljc1NlcnZpY2VJZCIsIklEaWFnbm9zdGljc0NvbW1hbmRGYWN0b3J5IiwiRGlhZ25vc3RpY3NDb21tYW5kRmFjdG9yeSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDOztBQUNBLE1BQU1DLGlCQUFpQixHQUFHQyxPQUFPLENBQUMsMEJBQUQsQ0FBakM7O0FBQ0EsTUFBTUMscUJBQXFCLEdBQUdELE9BQU8sQ0FBQyw4QkFBRCxDQUFyQzs7QUFDQSxNQUFNRSw2QkFBNkIsR0FBR0YsT0FBTyxDQUFDLHNDQUFELENBQTdDOztBQUNBLE1BQU1HLHNCQUFzQixHQUFHSCxPQUFPLENBQUMsK0JBQUQsQ0FBdEM7O0FBQ0EsTUFBTUksbUJBQW1CLEdBQUdKLE9BQU8sQ0FBQyw0QkFBRCxDQUFuQzs7QUFDQSxNQUFNSyxTQUFTLEdBQUdMLE9BQU8sQ0FBQyxvQkFBRCxDQUF6Qjs7QUFDQSxNQUFNTSxPQUFPLEdBQUdOLE9BQU8sQ0FBQyxrQkFBRCxDQUF2Qjs7QUFDQSxNQUFNTyxRQUFRLEdBQUdQLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLE1BQU1RLGVBQWUsR0FBR1IsT0FBTyxDQUFDLGlCQUFELENBQS9COztBQUNBLE1BQU1TLE9BQU8sR0FBR1QsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsU0FBU1UsYUFBVCxDQUF1QkMsY0FBdkIsRUFBdUM7QUFDbkNBLEVBQUFBLGNBQWMsQ0FBQ0MsWUFBZixDQUE0QkgsT0FBTyxDQUFDSSx3QkFBcEMsRUFBOEROLFFBQVEsQ0FBQ08sdUJBQXZFO0FBQ0FILEVBQUFBLGNBQWMsQ0FBQ0MsWUFBZixDQUE0QkgsT0FBTyxDQUFDTSx5QkFBcEMsRUFBK0RQLGVBQWUsQ0FBQ1EscUNBQS9FLEVBQXNIUixlQUFlLENBQUNTLHVDQUF0STtBQUNBTixFQUFBQSxjQUFjLENBQUNDLFlBQWYsQ0FBNEJILE9BQU8sQ0FBQ1MsbUJBQXBDLEVBQXlEbkIsaUJBQWlCLENBQUNvQix5Q0FBM0UsRUFBc0hwQixpQkFBaUIsQ0FBQ3FCLDJDQUF4STtBQUNBVCxFQUFBQSxjQUFjLENBQUNDLFlBQWYsQ0FBNEJILE9BQU8sQ0FBQ1MsbUJBQXBDLEVBQXlEakIscUJBQXFCLENBQUNvQixxQ0FBL0UsRUFBc0hwQixxQkFBcUIsQ0FBQ3FCLHVDQUE1STtBQUNBWCxFQUFBQSxjQUFjLENBQUNDLFlBQWYsQ0FBNEJILE9BQU8sQ0FBQ1MsbUJBQXBDLEVBQXlEZCxtQkFBbUIsQ0FBQ21CLCtCQUE3RSxFQUE4R25CLG1CQUFtQixDQUFDb0IsaUNBQWxJO0FBQ0FiLEVBQUFBLGNBQWMsQ0FBQ0MsWUFBZixDQUE0QkgsT0FBTyxDQUFDUyxtQkFBcEMsRUFBeURoQiw2QkFBNkIsQ0FBQ3VCLGtDQUF2RixFQUEySHZCLDZCQUE2QixDQUFDd0Isb0NBQXpKO0FBQ0FmLEVBQUFBLGNBQWMsQ0FBQ0MsWUFBZixDQUE0QkgsT0FBTyxDQUFDUyxtQkFBcEMsRUFBeURmLHNCQUFzQixDQUFDd0IsMENBQWhGLEVBQTRIeEIsc0JBQXNCLENBQUN5Qiw0Q0FBbko7QUFDQWpCLEVBQUFBLGNBQWMsQ0FBQ0MsWUFBZixDQUE0Qk4sT0FBTyxDQUFDdUIsMEJBQXBDLEVBQWdFeEIsU0FBUyxDQUFDeUIseUJBQTFFO0FBQ0g7O0FBQ0RqQyxPQUFPLENBQUNhLGFBQVIsR0FBd0JBLGFBQXhCIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG4ndXNlIHN0cmljdCc7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBlbnZQYXRoVmFyaWFibGVfMSA9IHJlcXVpcmUoXCIuL2NoZWNrcy9lbnZQYXRoVmFyaWFibGVcIik7XG5jb25zdCBpbnZhbGlkRGVidWdnZXJUeXBlXzEgPSByZXF1aXJlKFwiLi9jaGVja3MvaW52YWxpZERlYnVnZ2VyVHlwZVwiKTtcbmNvbnN0IGludmFsaWRQeXRob25QYXRoSW5EZWJ1Z2dlcl8xID0gcmVxdWlyZShcIi4vY2hlY2tzL2ludmFsaWRQeXRob25QYXRoSW5EZWJ1Z2dlclwiKTtcbmNvbnN0IHBvd2VyU2hlbGxBY3RpdmF0aW9uXzEgPSByZXF1aXJlKFwiLi9jaGVja3MvcG93ZXJTaGVsbEFjdGl2YXRpb25cIik7XG5jb25zdCBweXRob25JbnRlcnByZXRlcl8xID0gcmVxdWlyZShcIi4vY2hlY2tzL3B5dGhvbkludGVycHJldGVyXCIpO1xuY29uc3QgZmFjdG9yeV8xID0gcmVxdWlyZShcIi4vY29tbWFuZHMvZmFjdG9yeVwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi9jb21tYW5kcy90eXBlc1wiKTtcbmNvbnN0IGZpbHRlcl8xID0gcmVxdWlyZShcIi4vZmlsdGVyXCIpO1xuY29uc3QgcHJvbXB0SGFuZGxlcl8xID0gcmVxdWlyZShcIi4vcHJvbXB0SGFuZGxlclwiKTtcbmNvbnN0IHR5cGVzXzIgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbmZ1bmN0aW9uIHJlZ2lzdGVyVHlwZXMoc2VydmljZU1hbmFnZXIpIHtcbiAgICBzZXJ2aWNlTWFuYWdlci5hZGRTaW5nbGV0b24odHlwZXNfMi5JRGlhZ25vc3RpY0ZpbHRlclNlcnZpY2UsIGZpbHRlcl8xLkRpYWdub3N0aWNGaWx0ZXJTZXJ2aWNlKTtcbiAgICBzZXJ2aWNlTWFuYWdlci5hZGRTaW5nbGV0b24odHlwZXNfMi5JRGlhZ25vc3RpY0hhbmRsZXJTZXJ2aWNlLCBwcm9tcHRIYW5kbGVyXzEuRGlhZ25vc3RpY0NvbW1hbmRQcm9tcHRIYW5kbGVyU2VydmljZSwgcHJvbXB0SGFuZGxlcl8xLkRpYWdub3N0aWNDb21tYW5kUHJvbXB0SGFuZGxlclNlcnZpY2VJZCk7XG4gICAgc2VydmljZU1hbmFnZXIuYWRkU2luZ2xldG9uKHR5cGVzXzIuSURpYWdub3N0aWNzU2VydmljZSwgZW52UGF0aFZhcmlhYmxlXzEuRW52aXJvbm1lbnRQYXRoVmFyaWFibGVEaWFnbm9zdGljc1NlcnZpY2UsIGVudlBhdGhWYXJpYWJsZV8xLkVudmlyb25tZW50UGF0aFZhcmlhYmxlRGlhZ25vc3RpY3NTZXJ2aWNlSWQpO1xuICAgIHNlcnZpY2VNYW5hZ2VyLmFkZFNpbmdsZXRvbih0eXBlc18yLklEaWFnbm9zdGljc1NlcnZpY2UsIGludmFsaWREZWJ1Z2dlclR5cGVfMS5JbnZhbGlkRGVidWdnZXJUeXBlRGlhZ25vc3RpY3NTZXJ2aWNlLCBpbnZhbGlkRGVidWdnZXJUeXBlXzEuSW52YWxpZERlYnVnZ2VyVHlwZURpYWdub3N0aWNzU2VydmljZUlkKTtcbiAgICBzZXJ2aWNlTWFuYWdlci5hZGRTaW5nbGV0b24odHlwZXNfMi5JRGlhZ25vc3RpY3NTZXJ2aWNlLCBweXRob25JbnRlcnByZXRlcl8xLkludmFsaWRQeXRob25JbnRlcnByZXRlclNlcnZpY2UsIHB5dGhvbkludGVycHJldGVyXzEuSW52YWxpZFB5dGhvbkludGVycHJldGVyU2VydmljZUlkKTtcbiAgICBzZXJ2aWNlTWFuYWdlci5hZGRTaW5nbGV0b24odHlwZXNfMi5JRGlhZ25vc3RpY3NTZXJ2aWNlLCBpbnZhbGlkUHl0aG9uUGF0aEluRGVidWdnZXJfMS5JbnZhbGlkUHl0aG9uUGF0aEluRGVidWdnZXJTZXJ2aWNlLCBpbnZhbGlkUHl0aG9uUGF0aEluRGVidWdnZXJfMS5JbnZhbGlkUHl0aG9uUGF0aEluRGVidWdnZXJTZXJ2aWNlSWQpO1xuICAgIHNlcnZpY2VNYW5hZ2VyLmFkZFNpbmdsZXRvbih0eXBlc18yLklEaWFnbm9zdGljc1NlcnZpY2UsIHBvd2VyU2hlbGxBY3RpdmF0aW9uXzEuUG93ZXJTaGVsbEFjdGl2YXRpb25IYWNrRGlhZ25vc3RpY3NTZXJ2aWNlLCBwb3dlclNoZWxsQWN0aXZhdGlvbl8xLlBvd2VyU2hlbGxBY3RpdmF0aW9uSGFja0RpYWdub3N0aWNzU2VydmljZUlkKTtcbiAgICBzZXJ2aWNlTWFuYWdlci5hZGRTaW5nbGV0b24odHlwZXNfMS5JRGlhZ25vc3RpY3NDb21tYW5kRmFjdG9yeSwgZmFjdG9yeV8xLkRpYWdub3N0aWNzQ29tbWFuZEZhY3RvcnkpO1xufVxuZXhwb3J0cy5yZWdpc3RlclR5cGVzID0gcmVnaXN0ZXJUeXBlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlcnZpY2VSZWdpc3RyeS5qcy5tYXAiXX0=