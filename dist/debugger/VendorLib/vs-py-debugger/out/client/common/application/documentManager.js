"use strict"; // Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

var __decorate = void 0 && (void 0).__decorate || function (decorators, target, key, desc) {
  var c = arguments.length,
      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
      d;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
  return c > 3 && r && Object.defineProperty(target, key, r), r;
};

Object.defineProperty(exports, "__esModule", {
  value: true
}); // tslint:disable:no-any unified-signatures

const inversify_1 = require("inversify");

const vscode_1 = require("vscode");

let DocumentManager = class DocumentManager {
  get textDocuments() {
    return vscode_1.workspace.textDocuments;
  }

  get activeTextEditor() {
    return vscode_1.window.activeTextEditor;
  }

  get visibleTextEditors() {
    return vscode_1.window.visibleTextEditors;
  }

  get onDidChangeActiveTextEditor() {
    return vscode_1.window.onDidChangeActiveTextEditor;
  }

  get onDidChangeVisibleTextEditors() {
    return vscode_1.window.onDidChangeVisibleTextEditors;
  }

  get onDidChangeTextEditorSelection() {
    return vscode_1.window.onDidChangeTextEditorSelection;
  }

  get onDidChangeTextEditorOptions() {
    return vscode_1.window.onDidChangeTextEditorOptions;
  }

  get onDidChangeTextEditorViewColumn() {
    return vscode_1.window.onDidChangeTextEditorViewColumn;
  }

  get onDidOpenTextDocument() {
    return vscode_1.workspace.onDidOpenTextDocument;
  }

  get onDidCloseTextDocument() {
    return vscode_1.workspace.onDidCloseTextDocument;
  }

  get onDidSaveTextDocument() {
    return vscode_1.workspace.onDidSaveTextDocument;
  }

  showTextDocument(uri, options, preserveFocus) {
    return vscode_1.window.showTextDocument(uri, options, preserveFocus);
  }

  openTextDocument(arg) {
    return vscode_1.workspace.openTextDocument(arg);
  }

  applyEdit(edit) {
    return vscode_1.workspace.applyEdit(edit);
  }

};
DocumentManager = __decorate([inversify_1.injectable()], DocumentManager);
exports.DocumentManager = DocumentManager;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRvY3VtZW50TWFuYWdlci5qcyJdLCJuYW1lcyI6WyJfX2RlY29yYXRlIiwiZGVjb3JhdG9ycyIsInRhcmdldCIsImtleSIsImRlc2MiLCJjIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiciIsIk9iamVjdCIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImQiLCJSZWZsZWN0IiwiZGVjb3JhdGUiLCJpIiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJpbnZlcnNpZnlfMSIsInJlcXVpcmUiLCJ2c2NvZGVfMSIsIkRvY3VtZW50TWFuYWdlciIsInRleHREb2N1bWVudHMiLCJ3b3Jrc3BhY2UiLCJhY3RpdmVUZXh0RWRpdG9yIiwid2luZG93IiwidmlzaWJsZVRleHRFZGl0b3JzIiwib25EaWRDaGFuZ2VBY3RpdmVUZXh0RWRpdG9yIiwib25EaWRDaGFuZ2VWaXNpYmxlVGV4dEVkaXRvcnMiLCJvbkRpZENoYW5nZVRleHRFZGl0b3JTZWxlY3Rpb24iLCJvbkRpZENoYW5nZVRleHRFZGl0b3JPcHRpb25zIiwib25EaWRDaGFuZ2VUZXh0RWRpdG9yVmlld0NvbHVtbiIsIm9uRGlkT3BlblRleHREb2N1bWVudCIsIm9uRGlkQ2xvc2VUZXh0RG9jdW1lbnQiLCJvbkRpZFNhdmVUZXh0RG9jdW1lbnQiLCJzaG93VGV4dERvY3VtZW50IiwidXJpIiwib3B0aW9ucyIsInByZXNlcnZlRm9jdXMiLCJvcGVuVGV4dERvY3VtZW50IiwiYXJnIiwiYXBwbHlFZGl0IiwiZWRpdCIsImluamVjdGFibGUiXSwibWFwcGluZ3MiOiJBQUFBLGEsQ0FDQTtBQUNBOztBQUNBLElBQUlBLFVBQVUsR0FBSSxVQUFRLFNBQUtBLFVBQWQsSUFBNkIsVUFBVUMsVUFBVixFQUFzQkMsTUFBdEIsRUFBOEJDLEdBQTlCLEVBQW1DQyxJQUFuQyxFQUF5QztBQUNuRixNQUFJQyxDQUFDLEdBQUdDLFNBQVMsQ0FBQ0MsTUFBbEI7QUFBQSxNQUEwQkMsQ0FBQyxHQUFHSCxDQUFD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Z0JBQWdCLENBQUNDLEdBQUQsRUFBTUMsT0FBTixFQUFlQyxhQUFmLEVBQThCO0FBQzFDLFdBQU9sQixRQUFRLENBQUNLLE1BQVQsQ0FBZ0JVLGdCQUFoQixDQUFpQ0MsR0FBakMsRUFBc0NDLE9BQXRDLEVBQStDQyxhQUEvQyxDQUFQO0FBQ0g7O0FBQ0RDLEVBQUFBLGdCQUFnQixDQUFDQyxHQUFELEVBQU07QUFDbEIsV0FBT3BCLFFBQVEsQ0FBQ0csU0FBVCxDQUFtQmdCLGdCQUFuQixDQUFvQ0MsR0FBcEMsQ0FBUDtBQUNIOztBQUNEQyxFQUFBQSxTQUFTLENBQUNDLElBQUQsRUFBTztBQUNaLFdBQU90QixRQUFRLENBQUNHLFNBQVQsQ0FBbUJrQixTQUFuQixDQUE2QkMsSUFBN0IsQ0FBUDtBQUNIOztBQTFDdUMsQ0FBNUM7QUE0Q0FyQixlQUFlLEdBQUdyQixVQUFVLENBQUMsQ0FDekJrQixXQUFXLENBQUN5QixVQUFaLEVBRHlCLENBQUQsRUFFekJ0QixlQUZ5QixDQUE1QjtBQUdBTCxPQUFPLENBQUNLLGVBQVIsR0FBMEJBLGVBQTFCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbi8vIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS5cbnZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbi8vIHRzbGludDpkaXNhYmxlOm5vLWFueSB1bmlmaWVkLXNpZ25hdHVyZXNcbmNvbnN0IGludmVyc2lmeV8xID0gcmVxdWlyZShcImludmVyc2lmeVwiKTtcbmNvbnN0IHZzY29kZV8xID0gcmVxdWlyZShcInZzY29kZVwiKTtcbmxldCBEb2N1bWVudE1hbmFnZXIgPSBjbGFzcyBEb2N1bWVudE1hbmFnZXIge1xuICAgIGdldCB0ZXh0RG9jdW1lbnRzKCkge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud29ya3NwYWNlLnRleHREb2N1bWVudHM7XG4gICAgfVxuICAgIGdldCBhY3RpdmVUZXh0RWRpdG9yKCkge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud2luZG93LmFjdGl2ZVRleHRFZGl0b3I7XG4gICAgfVxuICAgIGdldCB2aXNpYmxlVGV4dEVkaXRvcnMoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cudmlzaWJsZVRleHRFZGl0b3JzO1xuICAgIH1cbiAgICBnZXQgb25EaWRDaGFuZ2VBY3RpdmVUZXh0RWRpdG9yKCkge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud2luZG93Lm9uRGlkQ2hhbmdlQWN0aXZlVGV4dEVkaXRvcjtcbiAgICB9XG4gICAgZ2V0IG9uRGlkQ2hhbmdlVmlzaWJsZVRleHRFZGl0b3JzKCkge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud2luZG93Lm9uRGlkQ2hhbmdlVmlzaWJsZVRleHRFZGl0b3JzO1xuICAgIH1cbiAgICBnZXQgb25EaWRDaGFuZ2VUZXh0RWRpdG9yU2VsZWN0aW9uKCkge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud2luZG93Lm9uRGlkQ2hhbmdlVGV4dEVkaXRvclNlbGVjdGlvbjtcbiAgICB9XG4gICAgZ2V0IG9uRGlkQ2hhbmdlVGV4dEVkaXRvck9wdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cub25EaWRDaGFuZ2VUZXh0RWRpdG9yT3B0aW9ucztcbiAgICB9XG4gICAgZ2V0IG9uRGlkQ2hhbmdlVGV4dEVkaXRvclZpZXdDb2x1bW4oKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53aW5kb3cub25EaWRDaGFuZ2VUZXh0RWRpdG9yVmlld0NvbHVtbjtcbiAgICB9XG4gICAgZ2V0IG9uRGlkT3BlblRleHREb2N1bWVudCgpIHtcbiAgICAgICAgcmV0dXJuIHZzY29kZV8xLndvcmtzcGFjZS5vbkRpZE9wZW5UZXh0RG9jdW1lbnQ7XG4gICAgfVxuICAgIGdldCBvbkRpZENsb3NlVGV4dERvY3VtZW50KCkge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud29ya3NwYWNlLm9uRGlkQ2xvc2VUZXh0RG9jdW1lbnQ7XG4gICAgfVxuICAgIGdldCBvbkRpZFNhdmVUZXh0RG9jdW1lbnQoKSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53b3Jrc3BhY2Uub25EaWRTYXZlVGV4dERvY3VtZW50O1xuICAgIH1cbiAgICBzaG93VGV4dERvY3VtZW50KHVyaSwgb3B0aW9ucywgcHJlc2VydmVGb2N1cykge1xuICAgICAgICByZXR1cm4gdnNjb2RlXzEud2luZG93LnNob3dUZXh0RG9jdW1lbnQodXJpLCBvcHRpb25zLCBwcmVzZXJ2ZUZvY3VzKTtcbiAgICB9XG4gICAgb3BlblRleHREb2N1bWVudChhcmcpIHtcbiAgICAgICAgcmV0dXJuIHZzY29kZV8xLndvcmtzcGFjZS5vcGVuVGV4dERvY3VtZW50KGFyZyk7XG4gICAgfVxuICAgIGFwcGx5RWRpdChlZGl0KSB7XG4gICAgICAgIHJldHVybiB2c2NvZGVfMS53b3Jrc3BhY2UuYXBwbHlFZGl0KGVkaXQpO1xuICAgIH1cbn07XG5Eb2N1bWVudE1hbmFnZXIgPSBfX2RlY29yYXRlKFtcbiAgICBpbnZlcnNpZnlfMS5pbmplY3RhYmxlKClcbl0sIERvY3VtZW50TWFuYWdlcik7XG5leHBvcnRzLkRvY3VtZW50TWFuYWdlciA9IERvY3VtZW50TWFuYWdlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRvY3VtZW50TWFuYWdlci5qcy5tYXAiXX0=