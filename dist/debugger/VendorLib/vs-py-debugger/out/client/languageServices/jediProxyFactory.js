"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

const vscode_1 = require("vscode");

const jediProxy_1 = require("../providers/jediProxy");

class JediFactory {
  constructor(extensionRootPath, serviceContainer) {
    this.extensionRootPath = extensionRootPath;
    this.serviceContainer = serviceContainer;
    this.disposables = [];
    this.jediProxyHandlers = new Map();
  }

  dispose() {
    this.disposables.forEach(disposable => disposable.dispose());
    this.disposables = [];
  }

  getJediProxyHandler(resource) {
    const workspaceFolder = resource ? vscode_1.workspace.getWorkspaceFolder(resource) : undefined;
    let workspacePath = workspaceFolder ? workspaceFolder.uri.fsPath : undefined;

    if (!workspacePath) {
      if (Array.isArray(vscode_1.workspace.workspaceFolders) && vscode_1.workspace.workspaceFolders.length > 0) {
        workspacePath = vscode_1.workspace.workspaceFolders[0].uri.fsPath;
      } else {
        workspacePath = __dirname;
      }
    }

    if (!this.jediProxyHandlers.has(workspacePath)) {
      const jediProxy = new jediProxy_1.JediProxy(this.extensionRootPath, workspacePath, this.serviceContainer);
      const jediProxyHandler = new jediProxy_1.JediProxyHandler(jediProxy);
      this.disposables.push(jediProxy, jediProxyHandler);
      this.jediProxyHandlers.set(workspacePath, jediProxyHandler);
    } // tslint:disable-next-line:no-non-null-assertion


    return this.jediProxyHandlers.get(workspacePath);
  }

}

exports.JediFactory = JediFactory;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplZGlQcm94eUZhY3RvcnkuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ2c2NvZGVfMSIsInJlcXVpcmUiLCJqZWRpUHJveHlfMSIsIkplZGlGYWN0b3J5IiwiY29uc3RydWN0b3IiLCJleHRlbnNpb25Sb290UGF0aCIsInNlcnZpY2VDb250YWluZXIiLCJkaXNwb3NhYmxlcyIsImplZGlQcm94eUhhbmRsZXJzIiwiTWFwIiwiZGlzcG9zZSIsImZvckVhY2giLCJkaXNwb3NhYmxlIiwiZ2V0SmVkaVByb3h5SGFuZGxlciIsInJlc291cmNlIiwid29ya3NwYWNlRm9sZGVyIiwid29ya3NwYWNlIiwiZ2V0V29ya3NwYWNlRm9sZGVyIiwidW5kZWZpbmVkIiwid29ya3NwYWNlUGF0aCIsInVyaSIsImZzUGF0aCIsIkFycmF5IiwiaXNBcnJheSIsIndvcmtzcGFjZUZvbGRlcnMiLCJsZW5ndGgiLCJfX2Rpcm5hbWUiLCJoYXMiLCJqZWRpUHJveHkiLCJKZWRpUHJveHkiLCJqZWRpUHJveHlIYW5kbGVyIiwiSmVkaVByb3h5SGFuZGxlciIsInB1c2giLCJzZXQiLCJnZXQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQStCLFlBQS9CLEVBQTZDO0FBQUVDLEVBQUFBLEtBQUssRUFBRTtBQUFULENBQTdDOztBQUNBLE1BQU1DLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsV0FBVyxHQUFHRCxPQUFPLENBQUMsd0JBQUQsQ0FBM0I7O0FBQ0EsTUFBTUUsV0FBTixDQUFrQjtBQUNkQyxFQUFBQSxXQUFXLENBQUNDLGlCQUFELEVBQW9CQyxnQkFBcEIsRUFBc0M7QUFDN0MsU0FBS0QsaUJBQUwsR0FBeUJBLGlCQUF6QjtBQUNBLFNBQUtDLGdCQUFMLEdBQXdCQSxnQkFBeEI7QUFDQSxTQUFLQyxXQUFMLEdBQW1CLEVBQW5CO0FBQ0EsU0FBS0MsaUJBQUwsR0FBeUIsSUFBSUMsR0FBSixFQUF6QjtBQUNIOztBQUNEQyxFQUFBQSxPQUFPLEdBQUc7QUFDTixTQUFLSCxXQUFMLENBQWlCSSxPQUFqQixDQUF5QkMsVUFBVSxJQUFJQSxVQUFVLENBQUNGLE9BQVgsRUFBdkM7QUFDQSxTQUFLSCxXQUFMLEdBQW1CLEVBQW5CO0FBQ0g7O0FBQ0RNLEVBQUFBLG1CQUFtQixDQUFDQyxRQUFELEVBQVc7QUFDMUIsVUFBTUMsZUFBZSxHQUFHRCxRQUFRLEdBQUdkLFFBQVEsQ0FBQ2dCLFNBQVQsQ0FBbUJDLGtCQUFuQixDQUFzQ0gsUUFBdEMsQ0FBSCxHQUFxREksU0FBckY7QUFDQSxRQUFJQyxhQUFhLEdBQUdKLGVBQWUsR0FBR0EsZUFBZSxDQUFDSyxHQUFoQixDQUFvQkMsTUFBdkIsR0FBZ0NILFNBQW5FOztBQUNBLFFBQUksQ0FBQ0MsYUFBTCxFQUFvQjtBQUNoQixVQUFJRyxLQUFLLENBQUNDLE9BQU4sQ0FBY3ZCLFFBQVEsQ0FBQ2dCLFNBQVQsQ0FBbUJRLGdCQUFqQyxLQUFzRHhCLFFBQVEsQ0FBQ2dCLFNBQVQsQ0FBbUJRLGdCQUFuQixDQUFvQ0MsTUFBcEMsR0FBNkMsQ0FBdkcsRUFBMEc7QUFDdEdOLFFBQUFBLGFBQWEsR0FBR25CLFFBQVEsQ0FBQ2dCLFNBQVQsQ0FBbUJRLGdCQUFuQixDQUFvQyxDQUFwQyxFQUF1Q0osR0FBdkMsQ0FBMkNDLE1BQTNEO0FBQ0gsT0FGRCxNQUdLO0FBQ0RGLFFBQUFBLGFBQWEsR0FBR08sU0FBaEI7QUFDSDtBQUNKOztBQUNELFFBQUksQ0FBQyxLQUFLbEIsaUJBQUwsQ0FBdUJtQixHQUF2QixDQUEyQlIsYUFBM0IsQ0FBTCxFQUFnRDtBQUM1QyxZQUFNUyxTQUFTLEdBQUcsSUFBSTFCLFdBQVcsQ0FBQzJCLFNBQWhCLENBQTBCLEtBQUt4QixpQkFBL0IsRUFBa0RjLGFBQWxELEVBQWlFLEtBQUtiLGdCQUF0RSxDQUFsQjtBQUNBLFlBQU13QixnQkFBZ0IsR0FBRyxJQUFJNUIsV0FBVyxDQUFDNkIsZ0JBQWhCLENBQWlDSCxTQUFqQyxDQUF6QjtBQUNBLFdBQUtyQixXQUFMLENBQWlCeUIsSUFBakIsQ0FBc0JKLFNBQXRCLEVBQWlDRSxnQkFBakM7QUFDQSxXQUFLdEIsaUJBQUwsQ0FBdUJ5QixHQUF2QixDQUEyQmQsYUFBM0IsRUFBMENXLGdCQUExQztBQUNILEtBaEJ5QixDQWlCMUI7OztBQUNBLFdBQU8sS0FBS3RCLGlCQUFMLENBQXVCMEIsR0FBdkIsQ0FBMkJmLGFBQTNCLENBQVA7QUFDSDs7QUE5QmE7O0FBZ0NsQnJCLE9BQU8sQ0FBQ0ssV0FBUixHQUFzQkEsV0FBdEIiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHZzY29kZV8xID0gcmVxdWlyZShcInZzY29kZVwiKTtcbmNvbnN0IGplZGlQcm94eV8xID0gcmVxdWlyZShcIi4uL3Byb3ZpZGVycy9qZWRpUHJveHlcIik7XG5jbGFzcyBKZWRpRmFjdG9yeSB7XG4gICAgY29uc3RydWN0b3IoZXh0ZW5zaW9uUm9vdFBhdGgsIHNlcnZpY2VDb250YWluZXIpIHtcbiAgICAgICAgdGhpcy5leHRlbnNpb25Sb290UGF0aCA9IGV4dGVuc2lvblJvb3RQYXRoO1xuICAgICAgICB0aGlzLnNlcnZpY2VDb250YWluZXIgPSBzZXJ2aWNlQ29udGFpbmVyO1xuICAgICAgICB0aGlzLmRpc3Bvc2FibGVzID0gW107XG4gICAgICAgIHRoaXMuamVkaVByb3h5SGFuZGxlcnMgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuZGlzcG9zYWJsZXMuZm9yRWFjaChkaXNwb3NhYmxlID0+IGRpc3Bvc2FibGUuZGlzcG9zZSgpKTtcbiAgICAgICAgdGhpcy5kaXNwb3NhYmxlcyA9IFtdO1xuICAgIH1cbiAgICBnZXRKZWRpUHJveHlIYW5kbGVyKHJlc291cmNlKSB7XG4gICAgICAgIGNvbnN0IHdvcmtzcGFjZUZvbGRlciA9IHJlc291cmNlID8gdnNjb2RlXzEud29ya3NwYWNlLmdldFdvcmtzcGFjZUZvbGRlcihyZXNvdXJjZSkgOiB1bmRlZmluZWQ7XG4gICAgICAgIGxldCB3b3Jrc3BhY2VQYXRoID0gd29ya3NwYWNlRm9sZGVyID8gd29ya3NwYWNlRm9sZGVyLnVyaS5mc1BhdGggOiB1bmRlZmluZWQ7XG4gICAgICAgIGlmICghd29ya3NwYWNlUGF0aCkge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodnNjb2RlXzEud29ya3NwYWNlLndvcmtzcGFjZUZvbGRlcnMpICYmIHZzY29kZV8xLndvcmtzcGFjZS53b3Jrc3BhY2VGb2xkZXJzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICB3b3Jrc3BhY2VQYXRoID0gdnNjb2RlXzEud29ya3NwYWNlLndvcmtzcGFjZUZvbGRlcnNbMF0udXJpLmZzUGF0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHdvcmtzcGFjZVBhdGggPSBfX2Rpcm5hbWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmplZGlQcm94eUhhbmRsZXJzLmhhcyh3b3Jrc3BhY2VQYXRoKSkge1xuICAgICAgICAgICAgY29uc3QgamVkaVByb3h5ID0gbmV3IGplZGlQcm94eV8xLkplZGlQcm94eSh0aGlzLmV4dGVuc2lvblJvb3RQYXRoLCB3b3Jrc3BhY2VQYXRoLCB0aGlzLnNlcnZpY2VDb250YWluZXIpO1xuICAgICAgICAgICAgY29uc3QgamVkaVByb3h5SGFuZGxlciA9IG5ldyBqZWRpUHJveHlfMS5KZWRpUHJveHlIYW5kbGVyKGplZGlQcm94eSk7XG4gICAgICAgICAgICB0aGlzLmRpc3Bvc2FibGVzLnB1c2goamVkaVByb3h5LCBqZWRpUHJveHlIYW5kbGVyKTtcbiAgICAgICAgICAgIHRoaXMuamVkaVByb3h5SGFuZGxlcnMuc2V0KHdvcmtzcGFjZVBhdGgsIGplZGlQcm94eUhhbmRsZXIpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgcmV0dXJuIHRoaXMuamVkaVByb3h5SGFuZGxlcnMuZ2V0KHdvcmtzcGFjZVBhdGgpO1xuICAgIH1cbn1cbmV4cG9ydHMuSmVkaUZhY3RvcnkgPSBKZWRpRmFjdG9yeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWplZGlQcm94eUZhY3RvcnkuanMubWFwIl19