"use strict"; // Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

Object.defineProperty(exports, "__esModule", {
  value: true
});

const unicode_1 = require("./unicode");

function isIdentifierStartChar(ch) {
  switch (ch) {
    // Underscore is explicitly allowed to start an identifier
    case 95
    /* Underscore */
    :
      return true;
    // Characters with the Other_ID_Start property

    case 0x1885:
    case 0x1886:
    case 0x2118:
    case 0x212E:
    case 0x309B:
    case 0x309C:
      return true;

    default:
      break;
  }

  const cat = unicode_1.getUnicodeCategory(ch);

  switch (cat) {
    // Supported categories for starting an identifier
    case unicode_1.UnicodeCategory.UppercaseLetter:
    case unicode_1.UnicodeCategory.LowercaseLetter:
    case unicode_1.UnicodeCategory.TitlecaseLetter:
    case unicode_1.UnicodeCategory.ModifierLetter:
    case unicode_1.UnicodeCategory.OtherLetter:
    case unicode_1.UnicodeCategory.LetterNumber:
      return true;

    default:
      break;
  }

  return false;
}

exports.isIdentifierStartChar = isIdentifierStartChar;

function isIdentifierChar(ch) {
  if (isIdentifierStartChar(ch)) {
    return true;
  }

  switch (ch) {
    // Characters with the Other_ID_Continue property
    case 0x00B7:
    case 0x0387:
    case 0x1369:
    case 0x136A:
    case 0x136B:
    case 0x136C:
    case 0x136D:
    case 0x136E:
    case 0x136F:
    case 0x1370:
    case 0x1371:
    case 0x19DA:
      return true;

    default:
      break;
  }

  switch (unicode_1.getUnicodeCategory(ch)) {
    // Supported categories for continuing an identifier
    case unicode_1.UnicodeCategory.NonSpacingMark:
    case unicode_1.UnicodeCategory.SpacingCombiningMark:
    case unicode_1.UnicodeCategory.DecimalDigitNumber:
    case unicode_1.UnicodeCategory.ConnectorPunctuation:
      return true;

    default:
      break;
  }

  return false;
}

exports.isIdentifierChar = isIdentifierChar;

function isWhiteSpace(ch) {
  return ch <= 32
  /* Space */
  || ch === 0x200B; // Unicode whitespace
}

exports.isWhiteSpace = isWhiteSpace;

function isLineBreak(ch) {
  return ch === 13
  /* CarriageReturn */
  || ch === 10
  /* LineFeed */
  ;
}

exports.isLineBreak = isLineBreak;

function isNumber(ch) {
  return ch >= 48
  /* _0 */
  && ch <= 57
  /* _9 */
  || ch === 95
  /* Underscore */
  ;
}

exports.isNumber = isNumber;

function isDecimal(ch) {
  return ch >= 48
  /* _0 */
  && ch <= 57
  /* _9 */
  || ch === 95
  /* Underscore */
  ;
}

exports.isDecimal = isDecimal;

function isHex(ch) {
  return isDecimal(ch) || ch >= 97
  /* a */
  && ch <= 102
  /* f */
  || ch >= 65
  /* A */
  && ch <= 70
  /* F */
  || ch === 95
  /* Underscore */
  ;
}

exports.isHex = isHex;

function isOctal(ch) {
  return ch >= 48
  /* _0 */
  && ch <= 55
  /* _7 */
  || ch === 95
  /* Underscore */
  ;
}

exports.isOctal = isOctal;

function isBinary(ch) {
  return ch === 48
  /* _0 */
  || ch === 49
  /* _1 */
  || ch === 95
  /* Underscore */
  ;
}

exports.isBinary = isBinary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNoYXJhY3RlcnMuanMiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ1bmljb2RlXzEiLCJyZXF1aXJlIiwiaXNJZGVudGlmaWVyU3RhcnRDaGFyIiwiY2giLCJjYXQiLCJnZXRVbmljb2RlQ2F0ZWdvcnkiLCJVbmljb2RlQ2F0ZWdvcnkiLCJVcHBlcmNhc2VMZXR0ZXIiLCJMb3dlcmNhc2VMZXR0ZXIiLCJUaXRsZWNhc2VMZXR0ZXIiLCJNb2RpZmllckxldHRlciIsIk90aGVyTGV0dGVyIiwiTGV0dGVyTnVtYmVyIiwiaXNJZGVudGlmaWVyQ2hhciIsIk5vblNwYWNpbmdNYXJrIiwiU3BhY2luZ0NvbWJpbmluZ01hcmsiLCJEZWNpbWFsRGlnaXROdW1iZXIiLCJDb25uZWN0b3JQdW5jdHVhdGlvbiIsImlzV2hpdGVTcGFjZSIsImlzTGluZUJyZWFrIiwiaXNOdW1iZXIiLCJpc0RlY2ltYWwiLCJpc0hleCIsImlzT2N0YWwiLCJpc0JpbmFyeSJdLCJtYXBwaW5ncyI6IkFBQUEsYSxDQUNBO0FBQ0E7O0FBQ0FBLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQkMsT0FBdEIsRUFBK0IsWUFBL0IsRUFBNkM7QUFBRUMsRUFBQUEsS0FBSyxFQUFFO0FBQVQsQ0FBN0M7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxTQUFTQyxxQkFBVCxDQUErQkMsRUFBL0IsRUFBbUM7QUFDL0IsVUFBUUEsRUFBUjtBQUNJO0FBQ0EsU0FBSztBQUFHO0FBQVI7QUFDSSxhQUFPLElBQVA7QUFDSjs7QUFDQSxTQUFLLE1BQUw7QUFDQSxTQUFLLE1BQUw7QUFDQSxTQUFLLE1BQUw7QUFDQSxTQUFLLE1BQUw7QUFDQSxTQUFLLE1BQUw7QUFDQSxTQUFLLE1BQUw7QUFDSSxhQUFPLElBQVA7O0FBQ0o7QUFDSTtBQWJSOztBQWVBLFFBQU1DLEdBQUcsR0FBR0osU0FBUyxDQUFDSyxrQkFBVixDQUE2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QUFBMUYsS0FBc0dBLEVBQUUsS0FBSztBQUFHO0FBQXZIO0FBQ0g7O0FBQ0RMLE9BQU8sQ0FBQ3dCLEtBQVIsR0FBZ0JBLEtBQWhCOztBQUNBLFNBQVNDLE9BQVQsQ0FBaUJwQixFQUFqQixFQUFxQjtBQUNqQixTQUFPQSxFQUFFLElBQUk7QUFBRztBQUFULEtBQXFCQSxFQUFFLElBQUk7QUFBRztBQUE5QixLQUEwQ0EsRUFBRSxLQUFLO0FBQUc7QUFBM0Q7QUFDSDs7QUFDREwsT0FBTyxDQUFDeUIsT0FBUixHQUFrQkEsT0FBbEI7O0FBQ0EsU0FBU0MsUUFBVCxDQUFrQnJCLEVBQWxCLEVBQXNCO0FBQ2xCLFNBQU9BLEVBQUUsS0FBSztBQUFHO0FBQVYsS0FBc0JBLEVBQUUsS0FBSztBQUFHO0FBQWhDLEtBQTRDQSxFQUFFLEtBQUs7QUFBRztBQUE3RDtBQUNIOztBQUNETCxPQUFPLENBQUMwQixRQUFSLEdBQW1CQSxRQUFuQiIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLy8gQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4vLyBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB1bmljb2RlXzEgPSByZXF1aXJlKFwiLi91bmljb2RlXCIpO1xuZnVuY3Rpb24gaXNJZGVudGlmaWVyU3RhcnRDaGFyKGNoKSB7XG4gICAgc3dpdGNoIChjaCkge1xuICAgICAgICAvLyBVbmRlcnNjb3JlIGlzIGV4cGxpY2l0bHkgYWxsb3dlZCB0byBzdGFydCBhbiBpZGVudGlmaWVyXG4gICAgICAgIGNhc2UgOTUgLyogVW5kZXJzY29yZSAqLzpcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAvLyBDaGFyYWN0ZXJzIHdpdGggdGhlIE90aGVyX0lEX1N0YXJ0IHByb3BlcnR5XG4gICAgICAgIGNhc2UgMHgxODg1OlxuICAgICAgICBjYXNlIDB4MTg4NjpcbiAgICAgICAgY2FzZSAweDIxMTg6XG4gICAgICAgIGNhc2UgMHgyMTJFOlxuICAgICAgICBjYXNlIDB4MzA5QjpcbiAgICAgICAgY2FzZSAweDMwOUM6XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjb25zdCBjYXQgPSB1bmljb2RlXzEuZ2V0VW5pY29kZUNhdGVnb3J5KGNoKTtcbiAgICBzd2l0Y2ggKGNhdCkge1xuICAgICAgICAvLyBTdXBwb3J0ZWQgY2F0ZWdvcmllcyBmb3Igc3RhcnRpbmcgYW4gaWRlbnRpZmllclxuICAgICAgICBjYXNlIHVuaWNvZGVfMS5Vbmljb2RlQ2F0ZWdvcnkuVXBwZXJjYXNlTGV0dGVyOlxuICAgICAgICBjYXNlIHVuaWNvZGVfMS5Vbmljb2RlQ2F0ZWdvcnkuTG93ZXJjYXNlTGV0dGVyOlxuICAgICAgICBjYXNlIHVuaWNvZGVfMS5Vbmljb2RlQ2F0ZWdvcnkuVGl0bGVjYXNlTGV0dGVyOlxuICAgICAgICBjYXNlIHVuaWNvZGVfMS5Vbmljb2RlQ2F0ZWdvcnkuTW9kaWZpZXJMZXR0ZXI6XG4gICAgICAgIGNhc2UgdW5pY29kZV8xLlVuaWNvZGVDYXRlZ29yeS5PdGhlckxldHRlcjpcbiAgICAgICAgY2FzZSB1bmljb2RlXzEuVW5pY29kZUNhdGVnb3J5LkxldHRlck51bWJlcjpcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydHMuaXNJZGVudGlmaWVyU3RhcnRDaGFyID0gaXNJZGVudGlmaWVyU3RhcnRDaGFyO1xuZnVuY3Rpb24gaXNJZGVudGlmaWVyQ2hhcihjaCkge1xuICAgIGlmIChpc0lkZW50aWZpZXJTdGFydENoYXIoY2gpKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBzd2l0Y2ggKGNoKSB7XG4gICAgICAgIC8vIENoYXJhY3RlcnMgd2l0aCB0aGUgT3RoZXJfSURfQ29udGludWUgcHJvcGVydHlcbiAgICAgICAgY2FzZSAweDAwQjc6XG4gICAgICAgIGNhc2UgMHgwMzg3OlxuICAgICAgICBjYXNlIDB4MTM2OTpcbiAgICAgICAgY2FzZSAweDEzNkE6XG4gICAgICAgIGNhc2UgMHgxMzZCOlxuICAgICAgICBjYXNlIDB4MTM2QzpcbiAgICAgICAgY2FzZSAweDEzNkQ6XG4gICAgICAgIGNhc2UgMHgxMzZFOlxuICAgICAgICBjYXNlIDB4MTM2RjpcbiAgICAgICAgY2FzZSAweDEzNzA6XG4gICAgICAgIGNhc2UgMHgxMzcxOlxuICAgICAgICBjYXNlIDB4MTlEQTpcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHN3aXRjaCAodW5pY29kZV8xLmdldFVuaWNvZGVDYXRlZ29yeShjaCkpIHtcbiAgICAgICAgLy8gU3VwcG9ydGVkIGNhdGVnb3JpZXMgZm9yIGNvbnRpbnVpbmcgYW4gaWRlbnRpZmllclxuICAgICAgICBjYXNlIHVuaWNvZGVfMS5Vbmljb2RlQ2F0ZWdvcnkuTm9uU3BhY2luZ01hcms6XG4gICAgICAgIGNhc2UgdW5pY29kZV8xLlVuaWNvZGVDYXRlZ29yeS5TcGFjaW5nQ29tYmluaW5nTWFyazpcbiAgICAgICAgY2FzZSB1bmljb2RlXzEuVW5pY29kZUNhdGVnb3J5LkRlY2ltYWxEaWdpdE51bWJlcjpcbiAgICAgICAgY2FzZSB1bmljb2RlXzEuVW5pY29kZUNhdGVnb3J5LkNvbm5lY3RvclB1bmN0dWF0aW9uOlxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBicmVhaztcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0cy5pc0lkZW50aWZpZXJDaGFyID0gaXNJZGVudGlmaWVyQ2hhcjtcbmZ1bmN0aW9uIGlzV2hpdGVTcGFjZShjaCkge1xuICAgIHJldHVybiBjaCA8PSAzMiAvKiBTcGFjZSAqLyB8fCBjaCA9PT0gMHgyMDBCOyAvLyBVbmljb2RlIHdoaXRlc3BhY2Vcbn1cbmV4cG9ydHMuaXNXaGl0ZVNwYWNlID0gaXNXaGl0ZVNwYWNlO1xuZnVuY3Rpb24gaXNMaW5lQnJlYWsoY2gpIHtcbiAgICByZXR1cm4gY2ggPT09IDEzIC8qIENhcnJpYWdlUmV0dXJuICovIHx8IGNoID09PSAxMCAvKiBMaW5lRmVlZCAqLztcbn1cbmV4cG9ydHMuaXNMaW5lQnJlYWsgPSBpc0xpbmVCcmVhaztcbmZ1bmN0aW9uIGlzTnVtYmVyKGNoKSB7XG4gICAgcmV0dXJuIGNoID49IDQ4IC8qIF8wICovICYmIGNoIDw9IDU3IC8qIF85ICovIHx8IGNoID09PSA5NSAvKiBVbmRlcnNjb3JlICovO1xufVxuZXhwb3J0cy5pc051bWJlciA9IGlzTnVtYmVyO1xuZnVuY3Rpb24gaXNEZWNpbWFsKGNoKSB7XG4gICAgcmV0dXJuIGNoID49IDQ4IC8qIF8wICovICYmIGNoIDw9IDU3IC8qIF85ICovIHx8IGNoID09PSA5NSAvKiBVbmRlcnNjb3JlICovO1xufVxuZXhwb3J0cy5pc0RlY2ltYWwgPSBpc0RlY2ltYWw7XG5mdW5jdGlvbiBpc0hleChjaCkge1xuICAgIHJldHVybiBpc0RlY2ltYWwoY2gpIHx8IChjaCA+PSA5NyAvKiBhICovICYmIGNoIDw9IDEwMiAvKiBmICovKSB8fCAoY2ggPj0gNjUgLyogQSAqLyAmJiBjaCA8PSA3MCAvKiBGICovKSB8fCBjaCA9PT0gOTUgLyogVW5kZXJzY29yZSAqLztcbn1cbmV4cG9ydHMuaXNIZXggPSBpc0hleDtcbmZ1bmN0aW9uIGlzT2N0YWwoY2gpIHtcbiAgICByZXR1cm4gY2ggPj0gNDggLyogXzAgKi8gJiYgY2ggPD0gNTUgLyogXzcgKi8gfHwgY2ggPT09IDk1IC8qIFVuZGVyc2NvcmUgKi87XG59XG5leHBvcnRzLmlzT2N0YWwgPSBpc09jdGFsO1xuZnVuY3Rpb24gaXNCaW5hcnkoY2gpIHtcbiAgICByZXR1cm4gY2ggPT09IDQ4IC8qIF8wICovIHx8IGNoID09PSA0OSAvKiBfMSAqLyB8fCBjaCA9PT0gOTUgLyogVW5kZXJzY29yZSAqLztcbn1cbmV4cG9ydHMuaXNCaW5hcnkgPSBpc0JpbmFyeTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNoYXJhY3RlcnMuanMubWFwIl19