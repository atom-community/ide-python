// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

class TextRange {
  constructor(start, length) {
    if (start < 0) {
      throw new Error('start must be non-negative');
    }

    if (length < 0) {
      throw new Error('length must be non-negative');
    }

    this.start = start;
    this.length = length;
  }

  static fromBounds(start, end) {
    return new TextRange(start, end - start);
  }

  get end() {
    return this.start + this.length;
  }

  contains(position) {
    return position >= this.start && position < this.end;
  }

}

TextRange.empty = TextRange.fromBounds(0, 0);
exports.TextRange = TextRange;
var TokenType;

(function (TokenType) {
  TokenType[TokenType["Unknown"] = 0] = "Unknown";
  TokenType[TokenType["String"] = 1] = "String";
  TokenType[TokenType["Comment"] = 2] = "Comment";
  TokenType[TokenType["Keyword"] = 3] = "Keyword";
  TokenType[TokenType["Number"] = 4] = "Number";
  TokenType[TokenType["Identifier"] = 5] = "Identifier";
  TokenType[TokenType["Operator"] = 6] = "Operator";
  TokenType[TokenType["Colon"] = 7] = "Colon";
  TokenType[TokenType["Semicolon"] = 8] = "Semicolon";
  TokenType[TokenType["Comma"] = 9] = "Comma";
  TokenType[TokenType["OpenBrace"] = 10] = "OpenBrace";
  TokenType[TokenType["CloseBrace"] = 11] = "CloseBrace";
  TokenType[TokenType["OpenBracket"] = 12] = "OpenBracket";
  TokenType[TokenType["CloseBracket"] = 13] = "CloseBracket";
  TokenType[TokenType["OpenCurly"] = 14] = "OpenCurly";
  TokenType[TokenType["CloseCurly"] = 15] = "CloseCurly";
})(TokenType = exports.TokenType || (exports.TokenType = {}));

var TokenizerMode;

(function (TokenizerMode) {
  TokenizerMode[TokenizerMode["CommentsAndStrings"] = 0] = "CommentsAndStrings";
  TokenizerMode[TokenizerMode["Full"] = 1] = "Full";
})(TokenizerMode = exports.TokenizerMode || (exports.TokenizerMode = {}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInR5cGVzLmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVGV4dFJhbmdlIiwiY29uc3RydWN0b3IiLCJzdGFydCIsImxlbmd0aCIsIkVycm9yIiwiZnJvbUJvdW5kcyIsImVuZCIsImNvbnRhaW5zIiwicG9zaXRpb24iLCJlbXB0eSIsIlRva2VuVHlwZSIsIlRva2VuaXplck1vZGUiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFDQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUFFQyxFQUFBQSxLQUFLLEVBQUU7QUFBVCxDQUE3Qzs7QUFDQSxNQUFNQyxTQUFOLENBQWdCO0FBQ1pDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFRQyxNQUFSLEVBQWdCO0FBQ3ZCLFFBQUlELEtBQUssR0FBRyxDQUFaLEVBQWU7QUFDWCxZQUFNLElBQUlFLEtBQUosQ0FBVSw0QkFBVixDQUFOO0FBQ0g7O0FBQ0QsUUFBSUQsTUFBTSxHQUFHLENBQWIsRUFBZ0I7QUFDWixZQUFNLElBQUlDLEtBQUosQ0FBVSw2QkFBVixDQUFOO0FBQ0g7O0FBQ0QsU0FBS0YsS0FBTCxHQUFhQSxLQUFiO0FBQ0EsU0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0g7O0FBQ2dCLFNBQVZFLFVBQVUsQ0FBQ0gsS0FBRCxFQUFRSSxHQUFSLEVBQWE7QUFDMUIsV0FBTyxJQUFJTixTQUFKLENBQWNFLEtBQWQsRUFBcUJJLEdBQUcsR0FBR0osS0FBM0IsQ0FBUDtBQUNIOztBQUNNLE1BQUhJLEdBQUcsR0FBRztBQUNOLFdBQU8sS0FBS0osS0FBTCxHQUFhLEtBQUtDLE1BQXpCO0FBQ0g7O0FBQ0RJLEVBQUFBLFFBQVEsQ0FBQ0MsUUFBRCxFQUFXO0FBQ2YsV0FBT0EsUUFBUSxJQUFJLEtBQUtOLEtBQWpCLElBQTBCTSxRQUFRLEdBQUcsS0FBS0YsR0FBakQ7QUFDSDs7QUFuQlc7O0FBcUJoQk4sU0FBUyxDQUFDUyxLQUFWLEdBQWtCVCxTQUFTLENBQUNLLFVBQVYsQ0FBcUIsQ0FBckIsRUFBd0IsQ0FBeEIsQ0FBbEI7QUFDQVAsT0FBTyxDQUFDRSxTQUFSLEdBQW9CQSxTQUFwQjtBQUNBLElBQUlVLFNBQUo7O0FBQ0EsQ0FBQyxVQUFVQSxTQUFWLEVBQXFCO0FBQ2xCQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxTQUFELENBQVQsR0FBdUIsQ0FBeEIsQ0FBVCxHQUFzQyxTQUF0QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxRQUFELENBQVQsR0FBc0IsQ0FBdkIsQ0FBVCxHQUFxQyxRQUFyQztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxTQUFELENBQVQsR0FBdUIsQ0FBeEIsQ0FBVCxHQUFzQyxTQUF0QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxTQUFELENBQVQsR0FBdUIsQ0FBeEIsQ0FBVCxHQUFzQyxTQUF0QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxRQUFELENBQVQsR0FBc0IsQ0FBdkIsQ0FBVCxHQUFxQyxRQUFyQztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxZQUFELENBQVQsR0FBMEIsQ0FBM0IsQ0FBVCxHQUF5QyxZQUF6QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxVQUFELENBQVQsR0FBd0IsQ0FBekIsQ0FBVCxHQUF1QyxVQUF2QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxPQUFELENBQVQsR0FBcUIsQ0FBdEIsQ0FBVCxHQUFvQyxPQUFwQztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxXQUFELENBQVQsR0FBeUIsQ0FBMUIsQ0FBVCxHQUF3QyxXQUF4QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxPQUFELENBQVQsR0FBcUIsQ0FBdEIsQ0FBVCxHQUFvQyxPQUFwQztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxXQUFELENBQVQsR0FBeUIsRUFBMUIsQ0FBVCxHQUF5QyxXQUF6QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxZQUFELENBQVQsR0FBMEIsRUFBM0IsQ0FBVCxHQUEwQyxZQUExQztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxhQUFELENBQVQsR0FBMkIsRUFBNUIsQ0FBVCxHQUEyQyxhQUEzQztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxjQUFELENBQVQsR0FBNEIsRUFBN0IsQ0FBVCxHQUE0QyxjQUE1QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxXQUFELENBQVQsR0FBeUIsRUFBMUIsQ0FBVCxHQUF5QyxXQUF6QztBQUNBQSxFQUFBQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxZQUFELENBQVQsR0FBMEIsRUFBM0IsQ0FBVCxHQUEwQyxZQUExQztBQUNILENBakJELEVBaUJHQSxTQUFTLEdBQUdaLE9BQU8sQ0FBQ1ksU0FBUixLQUFzQlosT0FBTyxDQUFDWSxTQUFSLEdBQW9CLEVBQTFDLENBakJmOztBQWtCQSxJQUFJQyxhQUFKOztBQUNBLENBQUMsVUFBVUEsYUFBVixFQUF5QjtBQUN0QkEsRUFBQUEsYUFBYSxDQUFDQSxhQUFhLENBQUMsb0JBQUQsQ0FBYixHQUFzQyxDQUF2QyxDQUFiLEdBQXlELG9CQUF6RDtBQUNBQSxFQUFBQSxhQUFhLENBQUNBLGFBQWEsQ0FBQyxNQUFELENBQWIsR0FBd0IsQ0FBekIsQ0FBYixHQUEyQyxNQUEzQztBQUNILENBSEQsRUFHR0EsYUFBYSxHQUFHYixPQUFPLENBQUNhLGFBQVIsS0FBMEJiLE9BQU8sQ0FBQ2EsYUFBUixHQUF3QixFQUFsRCxDQUhuQiIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxuLy8gTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLlxuJ3VzZSBzdHJpY3QnO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY2xhc3MgVGV4dFJhbmdlIHtcbiAgICBjb25zdHJ1Y3RvcihzdGFydCwgbGVuZ3RoKSB7XG4gICAgICAgIGlmIChzdGFydCA8IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignc3RhcnQgbXVzdCBiZSBub24tbmVnYXRpdmUnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobGVuZ3RoIDwgMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdsZW5ndGggbXVzdCBiZSBub24tbmVnYXRpdmUnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YXJ0ID0gc3RhcnQ7XG4gICAgICAgIHRoaXMubGVuZ3RoID0gbGVuZ3RoO1xuICAgIH1cbiAgICBzdGF0aWMgZnJvbUJvdW5kcyhzdGFydCwgZW5kKSB7XG4gICAgICAgIHJldHVybiBuZXcgVGV4dFJhbmdlKHN0YXJ0LCBlbmQgLSBzdGFydCk7XG4gICAgfVxuICAgIGdldCBlbmQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXJ0ICsgdGhpcy5sZW5ndGg7XG4gICAgfVxuICAgIGNvbnRhaW5zKHBvc2l0aW9uKSB7XG4gICAgICAgIHJldHVybiBwb3NpdGlvbiA+PSB0aGlzLnN0YXJ0ICYmIHBvc2l0aW9uIDwgdGhpcy5lbmQ7XG4gICAgfVxufVxuVGV4dFJhbmdlLmVtcHR5ID0gVGV4dFJhbmdlLmZyb21Cb3VuZHMoMCwgMCk7XG5leHBvcnRzLlRleHRSYW5nZSA9IFRleHRSYW5nZTtcbnZhciBUb2tlblR5cGU7XG4oZnVuY3Rpb24gKFRva2VuVHlwZSkge1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJVbmtub3duXCJdID0gMF0gPSBcIlVua25vd25cIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiU3RyaW5nXCJdID0gMV0gPSBcIlN0cmluZ1wiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJDb21tZW50XCJdID0gMl0gPSBcIkNvbW1lbnRcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiS2V5d29yZFwiXSA9IDNdID0gXCJLZXl3b3JkXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIk51bWJlclwiXSA9IDRdID0gXCJOdW1iZXJcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiSWRlbnRpZmllclwiXSA9IDVdID0gXCJJZGVudGlmaWVyXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIk9wZXJhdG9yXCJdID0gNl0gPSBcIk9wZXJhdG9yXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIkNvbG9uXCJdID0gN10gPSBcIkNvbG9uXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIlNlbWljb2xvblwiXSA9IDhdID0gXCJTZW1pY29sb25cIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiQ29tbWFcIl0gPSA5XSA9IFwiQ29tbWFcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiT3BlbkJyYWNlXCJdID0gMTBdID0gXCJPcGVuQnJhY2VcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiQ2xvc2VCcmFjZVwiXSA9IDExXSA9IFwiQ2xvc2VCcmFjZVwiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJPcGVuQnJhY2tldFwiXSA9IDEyXSA9IFwiT3BlbkJyYWNrZXRcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiQ2xvc2VCcmFja2V0XCJdID0gMTNdID0gXCJDbG9zZUJyYWNrZXRcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiT3BlbkN1cmx5XCJdID0gMTRdID0gXCJPcGVuQ3VybHlcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiQ2xvc2VDdXJseVwiXSA9IDE1XSA9IFwiQ2xvc2VDdXJseVwiO1xufSkoVG9rZW5UeXBlID0gZXhwb3J0cy5Ub2tlblR5cGUgfHwgKGV4cG9ydHMuVG9rZW5UeXBlID0ge30pKTtcbnZhciBUb2tlbml6ZXJNb2RlO1xuKGZ1bmN0aW9uIChUb2tlbml6ZXJNb2RlKSB7XG4gICAgVG9rZW5pemVyTW9kZVtUb2tlbml6ZXJNb2RlW1wiQ29tbWVudHNBbmRTdHJpbmdzXCJdID0gMF0gPSBcIkNvbW1lbnRzQW5kU3RyaW5nc1wiO1xuICAgIFRva2VuaXplck1vZGVbVG9rZW5pemVyTW9kZVtcIkZ1bGxcIl0gPSAxXSA9IFwiRnVsbFwiO1xufSkoVG9rZW5pemVyTW9kZSA9IGV4cG9ydHMuVG9rZW5pemVyTW9kZSB8fCAoZXhwb3J0cy5Ub2tlbml6ZXJNb2RlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVzLmpzLm1hcCJdfQ==